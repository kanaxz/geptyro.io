{"version":3,"file":"724.bundle.js","mappings":";;;;;AAAA;AACA,kCAAkC,mBAAO,CAAC,GAA4D;AACtG;AACA;AACA,uCAAuC,cAAc,WAAW,YAAY,oBAAoB,aAAa,mBAAmB,mBAAmB,WAAW,aAAa,4BAA4B,aAAa,mBAAmB,mBAAmB,YAAY,gCAAgC,YAAY,2BAA2B,iBAAiB,8BAA8B,eAAe,sBAAsB,aAAa,mBAAmB,kBAAkB,0BAA0B,+BAA+B,aAAa,sBAAsB,YAAY,kBAAkB,6CAA6C,gBAAgB,WAAW,iCAAiC,WAAW,YAAY,aAAa,mBAAmB,uBAAuB,YAAY,eAAe,eAAe,iCAAiC,kBAAkB,WAAW,YAAY,OAAO;AAC/3B;AACA;;;;;;;;ACNA;AACA,0LAA0L,qBAAqB,0NAA0N,oBAAoB,sKAAsK,mBAAmB;AACtnB;AACA;;;;;;;ACHA,UAAU,mBAAO,CAAC,IAAoF;AACtG,0BAA0B,mBAAO,CAAC,IAAmJ;;AAErL;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;;;AAIA;;;;;;;AClBA,eAAe,mBAAO,CAAC,IAA6B;AACpD,iBAAiB,mBAAO,CAAC,IAAiB;AAC1C,cAAc,mBAAO,CAAC,IAAU;AAChC,mBAAO,CAAC,IAAc;;;AAGtB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mCAAmC;AACnC;AACA;;AAEA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;;AAER;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG","sources":["webpack://geptyro.io-client/../../sools/modeling/hedera/routing/ModelLayout/style.scss","webpack://geptyro.io-client/../../sools/modeling/hedera/routing/ModelLayout/template.html","webpack://geptyro.io-client/../../sools/modeling/hedera/routing/ModelLayout/style.scss?2df0","webpack://geptyro.io-client/../../sools/modeling/hedera/routing/ModelLayout/index.js"],"sourcesContent":["// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"model-layout{display:block;width:100%;height:100%}model-layout>header{display:flex;flex-direction:row;align-items:center;width:100%;height:150px}model-layout>header>.before{display:flex;flex-direction:row;align-items:center;height:100%}model-layout>header>.before>div{height:100%}model-layout>header .infos{margin-left:50px}model-layout>header .infos h3{font-size:26px}model-layout>.content{display:flex;flex-direction:row;align-items:start;height:calc(100% - 150px)}model-layout>.content .actions{display:flex;flex-direction:column;height:100%;width:fit-content}model-layout>.content .actions app-interface{margin-top:10px;color:#fff}model-layout>.content .actions a{width:60px;height:60px;display:flex;align-items:center;justify-content:center;padding:5px;cursor:pointer;font-size:30px}model-layout>.content>.container{position:relative;width:100%;height:100%;flex:1}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Module\nvar code = \"<self> <header> <div class=\\\"before\\\" :v-for=\\\"fragment of this.@beforeHeader\\\"> <div :inner-html=\\\"fragment.fragment\\\"> </div> </div> <app-interface class=\\\"infos\\\"> <h3>{{ this.@model.@title }}</h3> </app-interface> </header> <div class=\\\"content\\\"> <div class=\\\"actions\\\" :v-for=\\\"action of this.@actions\\\"> <app-interface :v-link=\\\"action.url !== undefined ? this.@model.url + action.url : null\\\" :class=\\\"`${action.class || ''} interactable clickable activable`\\\"> <a :href=\\\"action.url !== undefined ? this.@model.url + action.url : null\\\" :on-click=\\\"this.onActionClicked(action, event)\\\"> {{= action.content}} </a> </app-interface> </div> <div class=\\\"container\\\" as=\\\"container\\\"></div> </div> </self> \";\n// Exports\nmodule.exports = code;","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[0].use[2]!./style.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","const Layout = require('sools-hedera/routing/Layout')\nconst template = require('./template.html')\nconst setup = require('../setup')\nrequire('./style.scss')\n\n\nmodule.exports = class ModelLayout extends Layout {\n\n  constructor() {\n    super()\n    this.on('propertyChanged:model', this.b(this.onModelChanged))\n  }\n\n  async onInit() {\n    await this.onModelChanged()\n  }\n\n  async onActionClicked(action) {\n    if (action.url != undefined) { return }\n    await action.execute(this.model)\n  }\n\n  async onModelChanged() {\n    if (!this.model) { return }\n    const setupActions = Object.values(setup.actions).sort((a, b) => (b.position || 1) - (a.position || 1))\n    const actions = []\n    for (const action of setupActions) {\n      try {\n        await action?.check(this.model)\n        actions.push(action)\n      } catch (err) {\n\n      }\n    }\n    this.actions = actions\n\n    this.beforeHeader = (await Promise.all(\n      setup.layout.header.before.map((builder) => builder(this.model))\n    ))\n      .filter((o) => o)\n  }\n}\n  .define({\n    name: 'model-layout',\n    template,\n  })\n  .properties({\n    actions: 'any',\n    model: 'any',\n    beforeHeader: 'any',\n  })"],"names":[],"sourceRoot":""}